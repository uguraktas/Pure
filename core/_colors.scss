/*----------------------------------------------------------------------------------------------*/
/*  PURE SCSS LIBRARY                                                                           */
/*----------------------------------------------------------------------------------------------*/
/*                                                                                              */
/*  Name    :   Colors                                                                          */
/*  Version :   1.0.0                                                                           */
/*  Git     :   https://github.com/TuruncuInternetSolutions/pure.git                            */
/*                                                                                              */
/*  by Turuncu Internet Solutions                                                               */
/*  www.turuncuweb.net                                                                          */
/*                                                                                              */
/*----------------------------------------------------------------------------------------------*/
/* COLOR STACKS */
/*----------------------------------------------------------------------------------------------*/
$pure-colors-facebook: #3b579d;
$pure-colors-google: #e34633;
$pure-colors-likedin: #007bb6;
$pure-colors-youtube: #EE1C1B;
$pure-colors-twitter: #00b0ed;
$pure-colors-whatsapp: #25D366;
$pure-colors-pinterest: #CB2028;
$pure-colors-instagram: #4d4e49;
$pure-colors-rss: #F8991D;
$pure-colors-tumblr: #2C4762;
$pure-colors-vimeo: #1AB7EA;

/*----------------------------------------------------------------------------------------------*/
/* COLOR FUNCTIONS */
/*----------------------------------------------------------------------------------------------*/

@function pure-black($opacity) {
    @return rgba(0, 0, 0, $opacity);
}

@function pure-white($opacity) {
    @return rgba(255, 255, 255, $opacity);
}

@function pure-color-darken($color, $percent: 10%) {
    @return darken( $color, $percent );
}

@function pure-color-lighten($color, $percent: 10%) {
    @return lighten( $color, $percent );
}

@function pure-color-saturate($color, $percent: 10%) {
    @return saturate( $color, $percent );
}

@function pure-color-desaturate($color, $percent: 10%) {
    @return desaturate( $color, $percent );
}

@function pure-color-adjust-hue($color, $percent: 10%) {
    @return adjust-hue( $color, $percent );
}

@function pure-color-add-alpha($color, $alpha: 0.5) {
    @return rgba( $color, $alpha);
}

@function pure-color-tint($color, $percent: 10%) {
    @return mix(white, $color, $percent);
}

@function pure-color-shade($color, $percent: 10%) {
    @return mix(black, $color, $percent);
}

@function pure-color-random-color($palette: false) {
    $rgb: "";

    @if $palette {
        @if type-of($palette) == string {
            @if $palette == monochrome {
                $rgb: if(round(random()) == 1, #000, #fff);
            }
            @else if $palette == grayscale or $palette == greyscale {
                $rgb: hsl(0, 0, random(100) + 0%);
            }
            @else {
                @warn "Invalid keywords (#{$palette})";
            }
        }
        @else {
            @warn "#{$palette} not a string";
        }
    }
    @else {
        $red: random(255);
        $green: random(255);
        $blue: random(255);

        $rgb: rgb($red, $green, $blue);
    }

    @return $rgb;
}

@function pure-color-gamma($channel) {
    @if $channel < 0.03928 {
        @return $channel / 12.92;
    }
    @else {
        $c: ($channel + 0.055) / 1.055;
        @return (133 * $c * $c * $c + 155 * $c * $c) / 288;
    }
}

@function pure-color-lightness($hex-color) {
    $-local-red-raw: red(rgba($hex-color, 1));
    $-local-green-raw: green(rgba($hex-color, 1));
    $-local-blue-raw: blue(rgba($hex-color, 1));

    $-local-red: pure-color-gamma($-local-red-raw / 255);
    $-local-green: pure-color-gamma($-local-green-raw / 255);
    $-local-blue: pure-color-gamma($-local-blue-raw / 255);

    @return $-local-red * 0.2126 + $-local-green * 0.7152 + $-local-blue * 0.0722;
}

@function pure-color-cmy($cyan, $magenta, $yellow) {
    $red: (1 - ($cyan / 100)) * 255;
    $green: (1 - ($magenta / 100)) * 255;
    $blue: (1 - ($yellow / 100)) * 255;

    @return rgb($red, $green, $blue);
}

@function pure-color-cmya($cyan, $magenta, $yellow, $alpha) {
    @return rgba(pure-color-cmy($cyan, $magenta, $yellow), $alpha);
}

@function pure-color-cmyk($cyan, $magenta, $yellow, $key) {
    $red: (1 - ($key / 100)) * (1 - ($cyan / 100)) * 255;
    $green: (1 - ($key / 100)) * (1 - ($magenta / 100)) * 255;
    $blue: (1 - ($key / 100)) * (1 - ($yellow / 100)) * 255;

    @return rgb($red, $green, $blue);
}

@function pure-color-cmyka($cyan, $magenta, $yellow, $key, $alpha) {
    @return rgba(pure-color-cmyk($cyan, $magenta, $yellow, $key), $alpha);
}

@function pure-color-hsv($hue, $saturation, $value) {
    $hue: ($hue * 100 / 360) / 100;
    $saturation: $saturation / 100;
    $value: $value / 100;

    $red: null;
    $green: null;
    $blue: null;

    $var_1: null;
    $var_2: null;
    $var_3: null;
    $var_b: null;
    $var_g: null;
    $var_h: null;
    $var_i: null;
    $var_r: null;

    @if ($saturation == 0) {
        $red: $value * 255;
        $green: $value * 255;
        $blue: $value * 255;
    }
    @else {
        $var_h: $hue * 6;

        @if ( $var_h == 6 ) {
            $var_h: 0;
        }

        $var_i: floor( $var_h );
        $var_1: $value * ( 1 - $saturation );
        $var_2: $value * ( 1 - $saturation * ( $var_h - $var_i ) );
        $var_3: $value * ( 1 - $saturation * ( 1 - ( $var_h - $var_i ) ) );

        @if ( $var_i == 0 ) {
            $var_r: $value;
            $var_g: $var_3;
            $var_b: $var_1;
        }
        @else if ( $var_i == 1 ) {
            $var_r: $var_2;
            $var_g: $value;
            $var_b: $var_1;
        }
        @else if ( $var_i == 2 ) {
            $var_r: $var_1;
            $var_g: $value;
            $var_b: $var_3;
        }
        @else if ( $var_i == 3 ) {
            $var_r: $var_1;
            $var_g: $var_2;
            $var_b: $value;
        }
        @else if ( $var_i == 4 ) {
            $var_r: $var_3;
            $var_g: $var_1;
            $var_b: $value;
        }
        @else {
            $var_r: $value;
            $var_g: $var_1;
            $var_b: $var_2;
        }

        $red: $var_r * 255;
        $green: $var_g * 255;
        $blue: $var_b * 255;
    }

    @return rgb($red, $green, $blue);
}

@function pure-color-hsva($hue, $saturation, $value, $alpha) {
    @return rgba(pure-color-hsv($hue, $saturation, $value), $alpha);
}

@function pure-color-hsb($hue, $saturation, $brightness) {
    @return pure-color-hsv($hue, $saturation, $brightness);
}

@function pure-color-hsba($hue, $saturation, $brightness, $alpha) {
    @return pure-color-hsva($hue, $saturation, $brightness, $alpha);
}

@function pure-color-inverted($color, $percent) {
    @if (lightness($color) > 50) {
        @return pure-color-lighten($color, $percent);
    }
    @else {
        @return pure-color-darken($color, $percent);
    }
}
